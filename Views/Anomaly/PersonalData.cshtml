@{
    ViewData["Title"] = "Anomaly Detection";
}
<br>
<h4>Ladda upp datafil för validering</h4>
<br>

<form asp-controller="Anomaly" asp-action="UploadFile" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <input type="file" name="file" class="form-control" accept=".csv,.json" required />
        <p><em>Följande format stöds: CSV, JSON</em></p>
    </div>
    <button type="submit" class="btn btn-primary">Ladda upp</button>
</form>

@if (ViewData["FileInfo"] != null)
{
    var fileInfoModel = (Q_verify_2025.Models.FileInfoModel)ViewData["FileInfo"];
    @await Html.PartialAsync("FileInfoPartial", fileInfoModel)
}

@if (ViewData["Uploaded"] != null && (bool)ViewData["Uploaded"] == true)
{
    <form asp-controller="Anomaly" asp-action="AnalyzePersonalData" method="post">
        <button type="submit" class="btn btn-success mt-3">Analysera</button>
    </form>
}

@if (ViewData["AnalysisResult"] != null)
{
    var analysisResult = (Newtonsoft.Json.Linq.JArray)ViewData["AnalysisResult"];
    int anomalyCount = 0;

    foreach (var anomaly in analysisResult)
    {
        bool hasAnomaly = anomaly["name_email_validity"].ToString() != "1" ||
        !anomaly["personnummer_gender"].ToString().Contains("Godkänt");

        if (hasAnomaly)
        {
            anomalyCount++;
        }
    }

    <h6 class="@(anomalyCount > 0 ? "text-danger bg-light" : "text-success bg-light")">
        @(anomalyCount > 0 ? "Antal avvikelser: " + anomalyCount : "Inga avvikelser upptäckta!")
    </h6>

    <h4 class="mt-3">Analysresultat</h4>
    <div class="table-responsive">
        <table class="table table-bordered table-striped mt-3">
            <thead class="thead-dark">
                <tr>
                    <th>Namn</th>
                    <th>E-post</th>
                    <th>Personnummer</th>
                    <th>E-post giltighet</th>
                    <th>Kön baserat på personnummer</th>
                    <th>Förutsagt kön</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var anomaly in analysisResult)
                {
                    bool hasAnomaly = anomaly["name_email_validity"].ToString() != "1" ||
                    !anomaly["personnummer_gender"].ToString().Contains("Godkänt");

                    <tr>
                        <td>@anomaly["name"]</td>
                        <td>@anomaly["email"]</td>
                        <td>@anomaly["personnummer"]</td>
                        <td
                            class="text-center @(anomaly["name_email_validity"].ToString() == "1" ? "text-success" : "text-danger")">
                            @(anomaly["name_email_validity"].ToString() == "1" ? "Godkänt" : "Avvikelse")
                        </td>
                        <td
                            class="text-center @(anomaly["personnummer_gender"].ToString().Contains("Godkänt") ? "text-success" : "text-danger")">
                            @anomaly["personnummer_gender"]
                        </td>
                        <td>@anomaly["predicted_gender"]</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
